exportMonthly: >
  With
       Set DefaultProductRows AS
       {TM1DRILLDOWNMEMBER({[Products].[BPSP $productPlanVersion].[$product]}, ALL, RECURSIVE )}
       MEMBER [Periods].[Periods].[ProductName] as
              [Products].[BPSP $productPlanVersion].CurrentMember.Properties('BPSP $productPlanVersion Description')
       MEMBER [Periods].[Periods].[ProductCaption] as
              [Products].[BPSP $productPlanVersion].CurrentMember.Properties('BPSP $productPlanVersion Element')
       MEMBER [Periods].[Periods].[ProductLevel] as
              [Products].[BPSP $productPlanVersion].CurrentMember.Properties('BPSP $productPlanVersion Product Level - Name')
       Set FixColumns AS
       {[Periods].[Periods].[ProductName],
        [Periods].[Periods].[ProductCaption],
        [Periods].[Periods].[ProductLevel]}
    SELECT
       {Union(FixColumns,{DRILLDOWNMEMBER({[Periods].[Periods].[$year1],[Periods].[Periods].[$year2],[Periods].[Periods].[$year3],[Periods].[Periods].[$year4]},{[Periods].[Periods].[$year1],[Periods].[Periods].[$year2],[Periods].[Periods].[$year3],[Periods].[Periods].[$year4]})},All)}
       PROPERTIES [Periods].[Periods].[Caption] ON COLUMNS ,
      {DefaultProductRows}
      PROPERTIES [Products].[BPSP $productPlanVersion].[BPSP $productPlanVersion Caption] ON ROWS
    FROM [Sales Plan by Product]
    WHERE
      (
       [LineItems Sales Plan by Product].[LineItems Sales Plan by Product].[$lineItem],
       [Versions].[Versions].[$companyVersion],
       [Companies].[Companies].[$company],
       [Receivers].[Receivers].[$receiver],
       [Measures Sales Plan by Product].[Measures Sales Plan by Product].[Value]
      )

exportCustomerMonthly: >
  With
    --Default mdx to run from JS
    Set ProductRows As
    {Filter(
      {Filter({[Products].[BPSP $productVersion].Members} ,
      [Sales Territory to Product].([Versions].[Versions].[$version],
                                    [Companies].[Companies].[$company],
                                    [Territories].[Territories].[$territoryCode],
                                    [Measures Sales Territory to Product].[Measures Sales Territory to Product].[Assignment Flag])>0)},
               [Products].[BPSP Budget].CurrentMember.Properties('BPSP $productVersion Product Level - Name') = 'PL1' or 
               [Products].[BPSP Budget].CurrentMember.Properties('BPSP $productVersion Product Level - Name') = 'PL2' or 
               [Products].[BPSP Budget].CurrentMember.Properties('BPSP $productVersion Product Level - Name') = 'PL2a' or 
               [Products].[BPSP Budget].CurrentMember.Properties('BPSP $productVersion Product Level - Name') = 'PL3'
              )}   
    -- mdx to run from JS when user focusing
    Set FocusedRows As
    {Filter({TM1DRILLDOWNMEMBER({[Products].[BPSP $productVersion].[$focusedProduct]} , All, Recursive)}
    ,[Sales Territory to Product].([Versions].[Versions].[$version],
                                    [Companies].[Companies].[$company],
                                    [Territories].[Territories].[$territoryCode],
                                    [Measures Sales Territory to Product].[Measures Sales Territory to Product].[Assignment Flag])>0)}
    -- Compress MDX result size with creating measures from Product Attributes for the query (decrease size from 3MB to 50KB)     
         MEMBER [Periods].[Periods].[ProductName] as 
                [Products].[BPSP $productVersion].CurrentMember.Properties('BPSP $productVersion Description')
         MEMBER [Periods].[Periods].[ProductCaption] as 
                [Products].[BPSP $productVersion].CurrentMember.Properties('BPSP $productVersion Element')
         MEMBER [Periods].[Periods].[ProductLevel] as 
                [Products].[BPSP $productVersion].CurrentMember.Properties('BPSP $productVersion Product Level - Name')
         MEMBER [Periods].[Periods].[UILevelFormat] as 
                [Products].[BPSP $productVersion].CurrentMember.Properties('BPSP $productVersion UI Level Format')
    -- Create the first 3 column with information
         Set FixColumns AS
         {[Periods].[Periods].[ProductName],
          [Periods].[Periods].[ProductCaption],
          [Periods].[Periods].[ProductLevel],
          [Periods].[Periods].[UILevelFormat]
          }
    SELECT
         {Union({FixColumns}, 
               {TM1DRILLDOWNMEMBER({[Periods].[Periods].[$year1], [Periods].[Periods].[$year2], [Periods].[Periods].[$year3], [Periods].[Periods].[$year4]}, ALL, RECURSIVE )}
         ,All)}
      ON COLUMNS, 
       {$rows}
      ON ROWS 
    FROM [Sales Plan by Customer] 
    WHERE 
      (
       [Versions].[Versions].[$version],
       [Receivers].[Receivers].[$receiver],
       [Territories].[Territories].[$territoryCode],
       [Companies].[Companies].[$company],
       [Customers Plan].[Customers Plan].[$customerCode],
       [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[$type],
       [Measures Sales Plan by Customer].[Measures Sales Plan by Customer].[Value]
      )

exportIpPlanningMonthly: >
  With
    --Checked out Product Element drilled down

    Set DefaultProductRows AS
    {Intersect({TM1DRILLDOWNMEMBER({[Materials].[BPSP $productPlanVersion IP].[$material]}, ALL, RECURSIVE )},
    {TM1SubsetToSet([Materials].[BPSP $productPlanVersion IP],'$company')})}

    -- Compress MDX result size with creating measures from Product Attributes for the query (decrease size from 3MB to 50KB)

    MEMBER [Periods].[Periods].[IP Name] as
      [Materials].[BPSP $productPlanVersion IP].CurrentMember.Properties('BPSP $productPlanVersion IP Name')
    MEMBER [Periods].[Periods].[IP Code] as
      [Materials].[BPSP $productPlanVersion IP].CurrentMember.Properties('Element')
    MEMBER [Periods].[Periods].[Level] as
      [Materials].[BPSP $productPlanVersion IP].CurrentMember.Properties('Product Level - Name')

    -- Create the first 3 column with information

    Set FixColumns AS
    {([Periods].[Periods].[IP Name]),
     ([Periods].[Periods].[IP Code]),
     ([Periods].[Periods].[Level])}
    Set DataColumns As
    {DRILLDOWNMEMBER({[Periods].[Periods].[$year1],[Periods].[Periods].[$year2]},{[Periods].[Periods].[$year1],[Periods].[Periods].[$year2]})}
    -- query
    SELECT
    --Columns
      {Union(FixColumns,DataColumns,All)}
      PROPERTIES [Periods].[Periods].[Caption] ON COLUMNS ,
    -- Rows
      {TM1FILTERBYLEVEL({[Instrument Types].[Instrument Types].Members}, 0)}*
      {TM1FILTERBYLEVEL({[Contract Types].[Contract Types].Members}, 0)}*
      {DefaultProductRows}
      PROPERTIES [Instrument Types].[Instrument Types].[Caption],[Contract Types].[Contract Types].[Caption],[Materials].[BPSP $productPlanVersion IP].[BPSP $productPlanVersion IP Caption] ON ROWS
    FROM [Sales Plan IP]
    WHERE
    (
      [LineItems Sales Plan IP].[LineItems Sales Plan IP].[Final Quantity Plan],
      [Versions].[Versions].[$companyVersion],
      [Companies].[Companies].[$company],
      [Receivers].[Receivers].[$receiver],
      [Measures Sales Plan IP].[Measures Sales Plan IP].[Value]
    )


rocheProductLevelExportMDX: >
  WITH
    --Create deault subset for the rows
         Set DefaultProductRows AS
         {TM1DRILLDOWNMEMBER({[Products].[BPSP $productPlanVersion].[PL1]}, ALL, RECURSIVE )}
    --Create deault subset for the rows by Receiver
         Set DefaultReceiversRows AS
    {TM1SubsetToSet([Receivers].[Receivers], 'zUI $company Report Receivers')}
    -- Compress MDX result size with creating measures from Product Attributes for the query (decrease size from 3MB to 50KB)
         MEMBER [LineItems Sales Report by Product].[LineItems Sales Report by Product].[ProductName] as
                [Products].[BPSP $productPlanVersion].CurrentMember.Properties('BPSP $productPlanVersion Description')
         MEMBER [LineItems Sales Report by Product].[LineItems Sales Report by Product].[ProductCaption] as
                [Products].[BPSP $productPlanVersion].CurrentMember.Properties('BPSP $productPlanVersion Element')
         MEMBER [LineItems Sales Report by Product].[LineItems Sales Report by Product].[ProductLevel] as
                [Products].[BPSP $productPlanVersion].CurrentMember.Properties('BPSP $productPlanVersion Product Level - Name')
         MEMBER [LineItems Sales Report by Product].[LineItems Sales Report by Product].[ProductType] as
                [Products].[BPSP $productPlanVersion].CurrentMember.Properties('BPSP $productPlanVersion Product Type')
         MEMBER [LineItems Sales Report by Product].[LineItems Sales Report by Product].[ReceiverName] as
            IIF( ISLEAF([Receivers].[Receivers].CurrentMember)
                , [Receivers].[Receivers].CurrentMember.Name
               , [Receivers].[Receivers].CurrentMember.Properties('Member Description'))
         MEMBER [LineItems Sales Report by Product].[LineItems Sales Report by Product].[DUMMY] AS 'DUMMY'
         MEMBER [Measures Sales Report by Product].[Measures Sales Report by Product].[PlanComment] as
                [Sales Report by Product].([Currency Keys].[Currency Keys].[Local],
                [LineItems Sales Report by Product].[LineItems Sales Report by Product].[Final Sales Plan],
                [Measures Sales Report by Product].[Measures Sales Report by Product].[Comment])
    SELECT
       {
    -- information columns
       ([Periods].[Periods].[$year0],[Measures Sales Report by Product].[Measures Sales Report by Product].[Value],[LineItems Sales Report by Product].[LineItems Sales Report by Product].[ProductName]),
        ([Periods].[Periods].[$year0],[Measures Sales Report by Product].[Measures Sales Report by Product].[Value],[LineItems Sales Report by Product].[LineItems Sales Report by Product].[ProductLevel]),
        ([Periods].[Periods].[$year0],[Measures Sales Report by Product].[Measures Sales Report by Product].[Value],[LineItems Sales Report by Product].[LineItems Sales Report by Product].[ProductCaption]),
        ([Periods].[Periods].[$year0],[Measures Sales Report by Product].[Measures Sales Report by Product].[Value],[LineItems Sales Report by Product].[LineItems Sales Report by Product].[ProductType]),
        ([Periods].[Periods].[$year0],[Measures Sales Report by Product].[Measures Sales Report by Product].[Value],[LineItems Sales Report by Product].[LineItems Sales Report by Product].[ReceiverName]),
    -- Two years actuals plus YTD
         ([Periods].[Periods].[$yearMinusOne],[Measures Sales Report by Product].[Measures Sales Report by Product].[Value],[LineItems Sales Report by Product].[LineItems Sales Report by Product].[BW Invoice]),
         ([Periods].[Periods].[$year0],[Measures Sales Report by Product].[Measures Sales Report by Product].[Value],[LineItems Sales Report by Product].[LineItems Sales Report by Product].[BW Invoice]),
         ([Periods].[Periods].[$year1],[Measures Sales Report by Product].[Measures Sales Report by Product].[Value],[LineItems Sales Report by Product].[LineItems Sales Report by Product].[BW Invoice YTD]),
    -- Plan forfour years
         ([Periods].[Periods].[$year1],[Measures Sales Report by Product].[Measures Sales Report by Product].[Value],[LineItems Sales Report by Product].[LineItems Sales Report by Product].[Final Sales Plan]),
         ([Periods].[Periods].[$year2],[Measures Sales Report by Product].[Measures Sales Report by Product].[Value],[LineItems Sales Report by Product].[LineItems Sales Report by Product].[Final Sales Plan]),
         ([Periods].[Periods].[$year3],[Measures Sales Report by Product].[Measures Sales Report by Product].[Value],[LineItems Sales Report by Product].[LineItems Sales Report by Product].[Final Sales Plan]),
         ([Periods].[Periods].[$year4],[Measures Sales Report by Product].[Measures Sales Report by Product].[Value],[LineItems Sales Report by Product].[LineItems Sales Report by Product].[Final Sales Plan]),
    -- Growth Rates for 4 plan years.
         ([Periods].[Periods].[$year1],[Measures Sales Report by Product].[Measures Sales Report by Product].[PlanComment],[LineItems Sales Report by Product].[LineItems Sales Report by Product].[Final Sales Plan]),
         ([Periods].[Periods].[$year2],[Measures Sales Report by Product].[Measures Sales Report by Product].[PlanComment],[LineItems Sales Report by Product].[LineItems Sales Report by Product].[Final Sales Plan]),
         ([Periods].[Periods].[$year3],[Measures Sales Report by Product].[Measures Sales Report by Product].[PlanComment],[LineItems Sales Report by Product].[LineItems Sales Report by Product].[Final Sales Plan]),
         ([Periods].[Periods].[$year4],[Measures Sales Report by Product].[Measures Sales Report by Product].[PlanComment],[LineItems Sales Report by Product].[LineItems Sales Report by Product].[Final Sales Plan])
    }  PROPERTIES [LineItems Sales Report by Product].[LineItems Sales Report by Product].[Caption]
      ON COLUMNS ,
      NON EMPTY
       {DefaultReceiversRows}*{DefaultProductRows}
      ON ROWS
    FROM [Sales Report by Product]
    WHERE
      (
       [Versions].[Versions].[$version],
       [Companies].[Companies].[$company],
       [Currency Keys].[Currency Keys].[$currency]
      )

rocheMaterialMaintenanceExportMDX: >
  With
    Member[}ElementAttributes_Materials].[}ElementAttributes_Materials].[AddDummyFlag] As
    IIF([}ElementAttributes_Materials].[}ElementAttributes_Materials].[Product Level - Name]='PL6',1,0)
    -- IP Node and has no pland Data then deletable
    Member[}ElementAttributes_Materials].[}ElementAttributes_Materials].[DeleteFlag] As
    IIF([}ElementAttributes_Materials].[}ElementAttributes_Materials].[Product Level - Name]='PL8' AND
        [Material Information by Company].([ Companies].[ Companies].[$company],
        [Measures Material Information by Company].[Measures Material Information by Company].[Flag - Has plan data]) = 0,1,0)
    -- IP Node and has pland Data then go to plan
    Member[}ElementAttributes_Materials].[}ElementAttributes_Materials].[NextFlag] As
    IIF([}ElementAttributes_Materials].[}ElementAttributes_Materials].[Product Level - Name]='PL8' AND
        [Material Information by Company].([ Companies].[ Companies].[$company],
        [Measures Material Information by Company].[Measures Material Information by Company].[Flag - Has plan data]) <> 0,1,0)
    SELECT
       {[}ElementAttributes_Materials].[}ElementAttributes_Materials].[BPSP $productPlanVersion Name],
        [}ElementAttributes_Materials].[}ElementAttributes_Materials].[Product Level - Name],
         [}ElementAttributes_Materials].[}ElementAttributes_Materials].[Element]}
      ON COLUMNS ,
      -- {TM1SubsetToSet([Materials].[BPSP $productPlanVersion],'$company MM')}

          {Filter({TM1SubsetToSet([Materials].[BPSP $productPlanVersion], '$company MM')},
                 Instr(UCASE([Materials].[BPSP $productPlanVersion].[BPSP $productPlanVersion Name]), '') > 0)}
      ON ROWS
    FROM [}ElementAttributes_Materials]

rocheMaterialMaintenanceByIpNodeExportMDX: >
  With
    -- IP Node then add dummy flag
    Member[}ElementAttributes_Materials].[}ElementAttributes_Materials].[AddDummyFlag] As
    IIF([}ElementAttributes_Materials].[}ElementAttributes_Materials].[Product Level - Name]='IP Node',1,0)
    -- IP Node and has no pland Data then deletable
    Member[}ElementAttributes_Materials].[}ElementAttributes_Materials].[DeleteFlag] As
    IIF([}ElementAttributes_Materials].[}ElementAttributes_Materials].[Product Level - Name]='PL8' AND
    [Material Information by Company].([ Companies].[ Companies].[$company],
    [Measures Material Information by Company].[Measures Material Information by Company].[Flag - Has plan data]) = 0,1,0)
    -- IP Node and has pland Data then go to plan
    Member[}ElementAttributes_Materials].[}ElementAttributes_Materials].[NextFlag] As
    IIF([}ElementAttributes_Materials].[}ElementAttributes_Materials].[Product Level - Name]='PL8' AND
    [Material Information by Company].([ Companies].[ Companies].[$company],
    [Measures Material Information by Company].[Measures Material Information by Company].[Flag - Has plan data]) <> 0,1,0)
    SELECT
    {[}ElementAttributes_Materials].[}ElementAttributes_Materials].[BPSP $productPlanVersion IP Name],
    [}ElementAttributes_Materials].[}ElementAttributes_Materials].[Product Level - Name],
    [}ElementAttributes_Materials].[}ElementAttributes_Materials].[Element]}
    ON COLUMNS ,
    {Filter({TM1SubsetToSet([Materials].[BPSP $productPlanVersion IP], '$company MM')},
    Instr(UCASE([Materials].[BPSP $productPlanVersion IP].[BPSP $productPlanVersion IP Name]), '') > 0)}
    PROPERTIES [Materials].[BPSP $productPlanVersion IP].[Caption]  ON ROWS
    FROM [}ElementAttributes_Materials]

rocheCustomerReportExportMDX: >
      WITH
      -- Compress MDX result size by creating measures from attributes for the query
          MEMBER [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[TerritoryName] as
              [Territories].[Territories].CurrentMember.Properties('Caption')
          MEMBER [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[ProductName] as
              [Products].[BPSP $productPlanVersion].CurrentMember.Properties('BPSP $productPlanVersion Description')
          MEMBER [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[ProductCaption] as
              [Products].[BPSP $productPlanVersion].CurrentMember.Properties('BPSP $productPlanVersion Caption')
          MEMBER [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[ProductLevel] as
              [Products].[BPSP $productPlanVersion].CurrentMember.Properties('BPSP $productPlanVersion Product Level - Name')
      -- Get Product Hierarchy elements
          MEMBER [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[Parent PL1] AS
              Ancestor([Products].[BPSP $productPlanVersion].CurrentMember, [Products].[BPSP $productPlanVersion].Levels(0) ).Properties('BPSP $productPlanVersion Caption')
          MEMBER [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[Parent PL2] AS
              Ancestor([Products].[BPSP $productPlanVersion].CurrentMember, [Products].[BPSP $productPlanVersion].Levels(1) ).Properties('BPSP $productPlanVersion Caption')
          MEMBER [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[Parent PL2A] AS
              Ancestor([Products].[BPSP $productPlanVersion].CurrentMember, [Products].[BPSP $productPlanVersion].Levels(2) ).Properties('BPSP $productPlanVersion Caption')
          MEMBER [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[Parent PL3] AS
              Ancestor([Products].[BPSP $productPlanVersion].CurrentMember, [Products].[BPSP $productPlanVersion].Levels(3) ).Properties('BPSP $productPlanVersion Caption')
          MEMBER [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[Parent PL4] AS
              Ancestor([Products].[BPSP $productPlanVersion].CurrentMember, [Products].[BPSP $productPlanVersion].Levels(4) ).Properties('BPSP $productPlanVersion Caption')
      -- Columns containing metadata used for UI formatting
          SET InfoColumns AS
              {
             ([Periods].[Periods].[$yearzero],
                  [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[TerritoryName]),
         --    ([Periods].[Periods].[$yearzero],
      --      [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[ProductLevel]),
             ([Periods].[Periods].[$yearzero],
                  [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[Parent PL1]),
             ([Periods].[Periods].[$yearzero],
                  [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[Parent PL2]),
             ([Periods].[Periods].[$yearzero],
                  [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[Parent PL2A]),
             ([Periods].[Periods].[$yearzero],
                  [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[Parent PL3]),
             ([Periods].[Periods].[$yearzero],
                  [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[Parent PL4]),
             ([Periods].[Periods].[$yearzero],
                  [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[ProductCaption])
              }
      -- Data columns
          SET DataColumns AS
              {
             ([Periods].[Periods].[$YearMinusOne],
                  [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[REXIS Invoice]),
             ([Periods].[Periods].[$yearzero],
                  [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[REXIS Invoice]),
             ([Periods].[Periods].[$yearzero],
                  [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[Previous Final Sales]),
             ([Periods].[Periods].[$yearzero],
              [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[$segmentedOne]),
             ([Periods].[Periods].[$YearPlusOne],
              [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[$segmentedOne]),
             ([Periods].[Periods].[$YearPlusTwo],
              [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[$segmentedOne]),
             ([Periods].[Periods].[$YearPlusThree],
              [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[$segmentedOne]),
             ([Periods].[Periods].[$yearzero],
              [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[$segmentedTwo]),
             ([Periods].[Periods].[$YearPlusOne],
              [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[$segmentedTwo]),
             ([Periods].[Periods].[$YearPlusTwo],
              [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[$segmentedTwo]),
             ([Periods].[Periods].[$YearPlusThree],
              [LineItems Sales Plan by Customer].[LineItems Sales Plan by Customer].[$segmentedTwo])
              }
      SELECT
          UNION({InfoColumns},
              {DataColumns}, All)
          ON COLUMNS,
          NON EMPTY
          {
              [Territories].[Territories].[All Territories $company],
              {TM1FILTERBYLEVEL({TM1DRILLDOWNMEMBER({[Territories].[Territories].[All Territories $company]}, All, Recursive)}, 0 )}
          }
          *
          {
              -- [Receivers].[Receivers].[PL]
              TM1SUBSETTOSET([Receivers], 'zUI $company Report Receivers')
          }
          *
          {
              -- [Products].[BPSP Budget].[PL1]
              TM1FILTERBYLEVEL( {TM1DRILLDOWNMEMBER({[Products].[BPSP $productPlanVersion].[PL1]}, All, Recursive)}, 0 )
          }
          ON ROWS
      FROM [Sales Plan by Customer]
      WHERE
          (
          [Versions].[Versions].[$companyVersion],
          [Companies].[Companies].[$company],
          [Customers Plan].[Customers Plan].[All Customers Plan $company],
          [Measures Sales Plan by Customer].[Measures Sales Plan by Customer].[Value]
          )

rocheCustomerStatusReportExportMDX: >
  WITH
       MEMBER [Measures Sales Territory to Customer].[Measures Sales Territory to Customer].[UILevelFormat]
           AS [Territories].[Territories].CurrentMember.Properties('UI Level Format')
   -- Flag to show/hide link to the customer planning
      MEMBER [Measures Sales Territory to Customer].[Measures Sales Territory to Customer].[ShowLink] AS
           IIF( IsLeaf( [Territories].[Territories].CurrentMember), \"1\", \"0\")
       MEMBER [Measures Sales Territory to Customer].[Measures Sales Territory to Customer].[% Completed]
           AS ([Measures Sales Territory to Customer].[Measures Sales Territory to Customer].[Submitted Flag] / [Measures Sales Territory to Customer].[Measures Sales Territory to Customer].[Assignment Flag])
           , FORMAT_STRING='#0%'
   SELECT
       {
       [Measures Sales Territory to Customer].[Measures Sales Territory to Customer].[UILevelFormat],
       [Measures Sales Territory to Customer].[Measures Sales Territory to Customer].[ShowLink],
       [Measures Sales Territory to Customer].[Measures Sales Territory to Customer].[Assignment Flag],
       [Measures Sales Territory to Customer].[Measures Sales Territory to Customer].[Submitted Flag],
       [Measures Sales Territory to Customer].[Measures Sales Territory to Customer].[% Completed]
       }
       ON COLUMNS ,
       {TM1DRILLDOWNMEMBER({[Territories].[Territories].[All Territories $company]}, All, Recursive)}
       PROPERTIES [Territories].[Territories].[Caption]  ON ROWS
   FROM [Sales Territory To Customer]
   WHERE
       (
       [Versions].[Versions].[$version],
       [Companies].[Companies].[$company],
       [Receivers].[Receivers].[All Receivers],
       [Customers Plan].[Customers Plan].[All Customers Plan $company]
       )

rocheIpPlanningReportExportMDX: >
  WITH
    -- Company Specific material subset
        SET DefaultProductRows AS
            {TM1SubsetToSet([Materials].[BPSP $budget IP], '$company')}
    --Create deault subset for the rows by systemValueGlobalCompanyProductPlanVersion and systemValueGlobalCompanyFocusedElement
        SET SelectedProductRows AS
            {INTERSECT(
                {TM1DRILLDOWNMEMBER({[Materials].[BPSP $budget IP].[$material]}, ALL, RECURSIVE )}
                ,{DefaultProductRows})
            }
    -- Compress MDX result size with creating measures from Product Attributes for the query (decrease size from 3MB to 50KB)
        MEMBER [LineItems Sales Plan IP].[LineItems Sales Plan IP].[MaterialName] as
            [Materials].[BPSP $budget IP].CurrentMember.Properties('BPSP $budget IP Name')
        MEMBER [LineItems Sales Plan IP].[LineItems Sales Plan IP].[MaterialNumber] as
            [Materials].[BPSP $budget IP].CurrentMember.Properties('Element')
        MEMBER [LineItems Sales Plan IP].[LineItems Sales Plan IP].[MaterialLevel] as
            [Materials].[BPSP $budget IP].CurrentMember.Properties('Product Level - Name')
        MEMBER [LineItems Sales Plan IP].[LineItems Sales Plan IP].[UIFormat] as
            [Materials].[BPSP $budget IP].CurrentMember.Properties('UI Level Format')
    -- Create the first 4 column with information
        SET FixColumns AS
            {
            ([Periods].[Periods].[$year],[Contract Types].[Contract Types].[Cash Sales],[Measures Sales Plan IP].[Measures Sales Plan IP].[Value]
                ,[LineItems Sales Plan IP].[LineItems Sales Plan IP].[MaterialName]),
            ([Periods].[Periods].[$year],[Contract Types].[Contract Types].[Cash Sales],[Measures Sales Plan IP].[Measures Sales Plan IP].[Value]
                ,[LineItems Sales Plan IP].[LineItems Sales Plan IP].[UIFormat]),
            ([Periods].[Periods].[$year],[Contract Types].[Contract Types].[Cash Sales],[Measures Sales Plan IP].[Measures Sales Plan IP].[Value]
                ,[LineItems Sales Plan IP].[LineItems Sales Plan IP].[MaterialLevel]),
            ([Periods].[Periods].[$year],[Contract Types].[Contract Types].[Cash Sales],[Measures Sales Plan IP].[Measures Sales Plan IP].[Value]
                ,[LineItems Sales Plan IP].[LineItems Sales Plan IP].[MaterialNumber])
            }
        SET DataColumns AS
            {[Periods].[Periods].[$yearMinusOne],
             [Periods].[Periods].[$year],
             [Periods].[Periods].[$next]}
            *
            {TM1DRILLDOWNMEMBER({[Contract Types].[Contract Types].[All Contract Types]}, All, Recursive)}
            *
            {[Measures Sales Plan IP].[Measures Sales Plan IP].[Value]}
            *
            {[LineItems Sales Plan IP].[LineItems Sales Plan IP].[Final Quantity Plan]}
        SET CommentColumns AS
            {[Periods].[Periods].[$year],[Periods].[Periods].[$next]}
            *
            {TM1FILTERBYLEVEL( {TM1DRILLDOWNMEMBER({[Contract Types].[Contract Types].[All Contract Types]}, All, Recursive)}, 0)}
            *
            {[Measures Sales Plan IP].[Measures Sales Plan IP].[Comment]}
            *
            {[LineItems Sales Plan IP].[LineItems Sales Plan IP].[Final Quantity Plan]}
    SELECT
        UNION(
            UNION({FixColumns}
                ,{DataColumns},All)
            , {CommentColumns}, ALL)
        ON COLUMNS ,
    -- rows
        NON EMPTY(
        {TM1SUBSETTOSET([Receivers].[Receivers], 'zUI $company Report Receivers' )}
        *
        {SelectedProductRows}
        )
        ON ROWS
    FROM [Sales Plan IP]
    WHERE
        (
        [Versions].[Versions].[$version],
        [Companies].[Companies].[$company],
        [Instrument Types].[Instrument Types].[$intrumentType]
        )

rocheGrowthRateExportMDX: >
    WITH
        MEMBER [Years].[Years].[ProductName] as 
            [Products Flat].[Products Flat].CurrentMember.Properties('BPSP Budget Description')
        MEMBER [Years].[Years].[ProductCode] as 
            [Products Flat].[Products Flat].CurrentMember.Properties('BPSP Budget Element')
        MEMBER [Years].[Years].[ProductLevel] as 
            [Products Flat].[Products Flat].CurrentMember.Properties('BPSP Budget Product Level - Name')      
        SELECT 
            {
                [Years].[Years].[ProductName],
                [Years].[Years].[ProductCode],
                [Years].[Years].[ProductLevel],
                [Years].[Years].[$yearZero],
                [Years].[Years].[$yearPlusOne],
                [Years].[Years].[$yearPlusTwo],
                [Years].[Years].[$yearPlusThree]
            }
            ON COLUMNS,
            {Tm1SubsetToset([Receivers].[Receivers],'zUI $company Plan Receivers')} * 
                {FILTER({
                    TM1FILTERBYLEVEL(
                    {[Products Flat].[Products Flat].[BPSP Budget].Children} , 0)},   
                    INSTR([Products Flat].[Products Flat].CurrentMember.Properties('BPSP Budget Description'), '' )>0)} 
            PROPERTIES [Products Flat].[Products Flat].[Caption] ON ROWS 
            FROM 
                [Sales Parameters by Products Flat] 
            WHERE 
                (
                    [Companies].[Companies].[$company],
                    [Versions].[Versions].[$version],
                    [Measures Sales Parameters by Products Flat].[Measures Sales Parameters by Products Flat].[Growth rate for Products Copy]
                )




